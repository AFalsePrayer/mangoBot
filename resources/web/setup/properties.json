[{"botproperty": "pathvalidatedebug", "definition": "pathvalidatedebug - If `true`, prints debug information for the path validator to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "restartcmd", "definition": "restartcmd - A command that can be used to restart the bot, if it is running as a service", "type": "String"}, {"botproperty": "twitter_client_id", "definition": "twitter_client_id - The client id for Twitter API", "type": "String"}, {"botproperty": "twitter_client_secret", "definition": "twitter_client_secret - The client secret for Twitter API", "type": "String"}, {"botproperty": "twitter_access_token", "definition": "No definition", "type": "String"}, {"botproperty": "twitter_refresh_token", "definition": "No definition", "type": "String"}, {"botproperty": "twitterusertimelinelimit", "definition": "twitterusertimelinelimit - The maximum number of tweets to retrieve per follower, when grabbing retweets. Default `15`", "type": "Int"}, {"botproperty": "twittertimelinelimit", "definition": "twittertimelinelimit - The maximum number of tweets to retrieve with a latest tweets request. Default `15`", "type": "Int"}, {"botproperty": "twittertimelineextendedlimit", "definition": "twittertimelineextendedlimit - The maximum number of tweets to retrieve with a sinceId. Default `30`", "type": "Int"}, {"botproperty": "channel", "definition": "channel - The Twitch channel the bot will operate in", "type": "String"}, {"botproperty": "owner", "definition": "owner - The name of the bot owner, who has administrator privileges to the bot", "type": "String"}, {"botproperty": "datastore", "definition": "datastore - The type of DB to use. Valid values: `sqlite3store`, `mysqlstore`, `h2store`. Default `sqlite3store`", "type": "String"}, {"botproperty": "bindip", "definition": "bindip - The IP address the bots webserver runs on. Default all", "type": "String"}, {"botproperty": "baseport", "definition": "baseport - The port the bots webserver runs on. Default `25000`", "type": "Int"}, {"botproperty": "usehttps", "definition": "usehttps - If `true`, the bots webserver uses HTTPS to secure the connection. Default `true`", "type": "Boolean"}, {"botproperty": "httpsfilename", "definition": "httpsFileName - If httpsKeyFileName is unset/blank, a JKS containing the certificate; else, an X509 Certificate in PEM format", "type": "String"}, {"botproperty": "httpskeyfilename", "definition": "httpsKeyFileName - The PKCS#8 private key in PEM format for httpsFileName; if unset/blank, httpsFileName is loaded as a JKS", "type": "String"}, {"botproperty": "httpspassword", "definition": "httpsPassword - The password, if any, to _httpsFileName_", "type": "String"}, {"botproperty": "proxybypasshttps", "definition": "proxybypasshttps - If `true`, the HTTP server reports SSL is enabled, even if `usessl` is `false`. Default `true`", "type": "Boolean"}, {"botproperty": "eventsubcallbackurl", "definition": "eventsubcallbackurl - The URL which will receive EventSub notifications", "type": "String"}, {"botproperty": "dnsdebug", "definition": "dnsdebug - If `true`, prints debugging info about DNS resolution to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "wspingerdebug", "definition": "wspingerdebug - If `true`, prints debug messages for active WSPinger instances. Default `false`", "type": "Boolean"}, {"botproperty": "usedefaultdnsresolver", "definition": "usedefaultdnsresolver - If `true`, only the default Java/System DNS resolver is used. Default `false`", "type": "Boolean"}, {"botproperty": "httpclienttimeout", "definition": "httpclienttimeout - The timeout, in seconds, for an HTTP request to complete. Default `10`", "type": "Int"}, {"botproperty": "httpclientdebug", "definition": "httpclientdebug - If `true`, information about each HTTP request sent by HttpClient is sent to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "clientid", "definition": "clientid - The Twitch Developer Application Client ID", "type": "String"}, {"botproperty": "clientsecret", "definition": "clientsecret - The Twitch Developer Application Client Secret", "type": "String"}, {"botproperty": "ircdebug", "definition": "ircdebug - If `true`, raw inbound and outbound IRC commands (except PASS) are sent to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "youtubekey", "definition": "youtubekey - The access token for YouTube APIv3", "type": "String"}, {"botproperty": "reactordebug", "definition": "reactordebug - If `true`, internal debugging for Reactor HTTP and WS processing is sent to the console. Default `false`", "type": "Boolean"}, {"botproperty": "internaldebug", "definition": "internaldebug - If `true`, internal debugging from JDK and other libraries are sent to the console. Default `false`", "type": "Boolean"}, {"botproperty": "debugon", "definition": "debugon - If `true`, enables debug output. Default `false`", "type": "Boolean"}, {"botproperty": "userollbar", "definition": "userollbar - If `true`, Exceptions thrown during operation may be sent to Rollbar exception tracking. Default `true`", "type": "Boolean"}, {"botproperty": "datastoreconfig", "definition": "datastoreconfig - If set, H2Store: Overrides the DB file name; SQLiteStore: Links to a file containing config overrides", "type": "String"}, {"botproperty": "mysqlport", "definition": "mysqlport - The port to use for MySQL connections. Default `3306`", "type": "String"}, {"botproperty": "mysqlhost", "definition": "mysqlhost - The IP, domain name, or hostname of the MySQL server", "type": "String"}, {"botproperty": "mysqlname", "definition": "mysqlname - The schema where the tables for the bot will be created/located on the MySQL server", "type": "String"}, {"botproperty": "mysqluser", "definition": "mysqluser - The username to login as to the MySQL server", "type": "String"}, {"botproperty": "mysqlpass", "definition": "mysqlpass - The password for `mysqluser`", "type": "String"}, {"botproperty": "discord_token", "definition": "discord_token - The Bot token from the Discord Developer portal", "type": "String"}, {"botproperty": "panelpassword", "definition": "panelpassword - The password to login to the panel. Default is a randomly generated password", "type": "String"}, {"botproperty": "paneluser", "definition": "paneluser - The username to login to the panel. Default `panel`", "type": "String"}, {"botproperty": "webenable", "definition": "webenable - If `true`, the bots webserver is started. Default `true`", "type": "Boolean"}, {"botproperty": "useeventsub", "definition": "useeventsub - If `true`, enables the EventSub module. Default `false`", "type": "Boolean"}, {"botproperty": "musicenable", "definition": "musicenable - If `true`, enables the websocket handler for the Song Request/YouTube player. Default `true`", "type": "Boolean"}, {"botproperty": "twitchalertskey", "definition": "twitchalertskey - The access token for retrieving donations from StreamLabs", "type": "String"}, {"botproperty": "twitchalertslimit", "definition": "twitchalertslimit - The maximum number of donations to pull from StreamLabs when updating. Default `5`", "type": "Int"}, {"botproperty": "tipeeestreamkey", "definition": "tipeeestreamkey - The access token for retrieving donations from TipeeeStream", "type": "String"}, {"botproperty": "tipeeestreamlimit", "definition": "tipeeestreamlimit - The maximum number of donations to pull from TipeeeStream when updating. Default `5`", "type": "Int"}, {"botproperty": "streamelementsjwt", "definition": "streamelementsjwt - The JWT token for retrieving donations from StreamElements", "type": "String"}, {"botproperty": "streamelementsid", "definition": "streamelementsid - The user id for retrieving donations from StreamElements", "type": "String"}, {"botproperty": "streamelementslimit", "definition": "streamelementslimit - The maximum number of donations to pull from StreamElements when updating. Default `5`", "type": "Int"}, {"botproperty": "backupdbauto", "definition": "backupdbauto - If `true`, the database is backed up to the ./backups folder every so often. Default `true`", "type": "Boolean"}, {"botproperty": "debuglog", "definition": "debuglog - If `true`, debug output is sent to log only, not the console. Default `false`", "type": "Boolean"}, {"botproperty": "reloadscripts", "definition": "reloadscripts - If `true`, scripts which are changed while the bot is running will be reloaded. Default `false`", "type": "Boolean"}, {"botproperty": "silentscriptsload", "definition": "silentscriptsload - If `true`, the script loading messages during startup are suppressed. Default `false`", "type": "Boolean"}, {"botproperty": "rhinodebugger", "definition": "rhinodebugger - If `true`, enables the Rhino debugger console. Default `false`", "type": "Boolean"}, {"botproperty": "rhino_es6", "definition": "rhino_es6 - If `true`, enables newer features from ECMAScript 6 in Rhino. Default `false`", "type": "Boolean"}, {"botproperty": "backupdbkeepdays", "definition": "backupdbkeepdays - The number of days before a DB backup is deleted. Default `5`", "type": "Int"}, {"botproperty": "backupdbhourfrequency", "definition": "backupdbhourfrequency - The number of hours between DB backups, if enabled. Default `24`", "type": "Int"}, {"botproperty": "logtimezone", "definition": "logtimezone - The timezone for timestamps in the log. Must be a valid IANA Time Zone Database name. Default `GMT`", "type": "String"}, {"botproperty": "wsdebug", "definition": "wsdebug - If `true`, information about inbound WS frames for the panel are sent to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "user", "definition": "No definition", "type": "String"}, {"botproperty": "offlinedelay", "definition": "offlinedelay - The delay, in seconds, before the `channel` is confirmed to be offline. Default `30`", "type": "Int"}, {"botproperty": "offlinetimeout", "definition": "offlinetimeout - The timeout, in seconds, after `channel` goes offline before it can be online. Default `300`", "type": "Int"}, {"botproperty": "allowpanelusertosetup", "definition": "allowpanelusertosetup - If `true`, the panel login can access the setup page; else only the random token. Default `true`", "type": "Boolean"}, {"botproperty": "helixdebug", "definition": "helixdebug - If `true`, debugging info for Twitch Helix API requests are sent to the debug log. Default `false`", "type": "Boolean"}, {"botproperty": "usebroadcasterforchatcommands", "definition": "usebroadcasterforchatcommands - If `true`, certain redirected chat commands are sent as the broadcaster. Default `false`", "type": "Boolean"}]
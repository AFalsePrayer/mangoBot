name: On Push Actions
on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - 'resources/java-runtime**'
jobs:
  parsecommandtags:
    name: Parse Command Tags on ubuntu-latest with Python 3.x
    if: github.repository == 'PhantomBot/PhantomBot'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Execute Script
      run: python3 development-resources/parse_transformers.py
    - name: Commit Changes
      uses: EndBug/add-and-commit@v7
      with:
        message: 'Updated the custom command tags guide'
  updateremotepanel:
    name: Update Remote Panel
    if: github.repository == 'PhantomBot/PhantomBot'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Copy Files
      run: |
        rsync -rv --delete-during --progress resources/web/panel docs
        rsync -rv --delete-during --progress resources/web/common docs
    - name: Commit Changes
      uses: EndBug/add-and-commit@v7
      with:
        message: 'Updated the remote panel'
  updatejlink:
    name: Update JLink Builds
    if: github.repository == 'PhantomBot/PhantomBot'
    strategy:
      max-parallel: 1
      matrix:
        include:
          - os: ubuntu-latest
            script: jlink-jdk-linux.sh
            folder: java-runtime-linux
            java-distribution: 'temurin'
            java-version: 11
          - os: windows-latest
            script: jlink-jdk.bat
            folder: java-runtime
            java-distribution: 'temurin'
            java-version: 11
          - os: macos-latest
            script: jlink-jdk-macos.sh
            folder: java-runtime-macos
            java-distribution: 'temurin'
            java-version: 11
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Set up JDK 11
      id: setup-java
      uses: actions/setup-java@v2
      with:
        distribution: ${{ matrix.java-distribution }}
        java-version: ${{ matrix.java-version }}
    - name: Run JLink (Windows)
      if: matrix.os == 'windows-latest'
      env:
        FOLDER: ${{ matrix.folder }}
        SCRIPT: ${{ matrix.script }}
        JDK: ${{ steps.setup-java.outputs.path }}
      run: |
        cd resources
        del /Q $FOLDER
        cd ..
        cd development-resources
        cmd /C $SCRIPT
    - name: Run JLink (Non-Windows)
      if: matrix.os != 'windows-latest'
      env:
        FOLDER: ${{ matrix.folder }}
        SCRIPT: ${{ matrix.script }}
        JDK: ${{ steps.setup-java.outputs.path }}
      run: |
        cd resources
        rm -rfv $FOLDER
        cd ..
        cd development-resources
        chmod +x $SCRIPT
        /bin/bash $SCRIPT
    - name: Commit Changes
      uses: EndBug/add-and-commit@v7
      with:
        message: 'Updated the JLink binaries'
